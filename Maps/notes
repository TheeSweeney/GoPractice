Maps
    very closely related to JS objects
    Both keys and values are statically types
        when we add some number of keys to a map, they must all be the exact same types
        all values must also be of the same types
        keys and values need not be the same type as each other
    
    3 ways to define map

        colors := map[string]string{
            "red":   "#ff0000",
            "green": "#4bf745",
        } 
            - we are declaring a map where all keys are type sting, and all values are type string
            - as with structs, maps must end with comma

        var colors map[string]string
            - as with structs, maps without values placed within them are initialized with zero values
            - this will create a map with no key value pairs
            - this style is used if we want to a figure out later on what key value pairs we'd like to add on to it

        colors := make(map[string]string)
            - functionally equivalent to above method
    Updating maps
	- maps can be populated with the bracket/square brace syntax
	- maps can NOT use the . syntax ie colors.white = "#ffffff" because all keys are strictly typed
    
        colors["white"] = "#ffffff"
    
    - remove key/value pairs in a map by using the delete() function

        delete(colors, "white")
        


